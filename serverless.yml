# NOTE: update this with your service name
service: stopwatch-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: eu-west-1

  # These environment variables are made available to our functions
  # under process.env.
  environment:
    tableName: swClients

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:eu-west-1:*:*"

functions:
  # Defines an HTTP API endpoint that calls the main function in create.js
  # - path: url path is /notes
  # - method: POST request
  create-client:
    handler: create-client.main
    events:
      - http:
          path: clients
          method: post
          authorizer: aws_iam

  list-clients:
    # Defines an HTTP API endpoint that calls the main function in list.js
    # - path: url path is /notes
    # - method: GET request
    handler: list-client.main
    events:
      - http:
          path: clients
          method: get
          authorizer: aws_iam

  update-client:
    handler: update-client.main
    events:
      - http:
          path: clients/{id}
          method: post
          authorizer: aws_iam

  delete-client:
    handler: delete-client.main
    events:
      - http:
          path: clients/{id}
          method: delete
          authorizer: aws_iam
